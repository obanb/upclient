version: 2
jobs:
  build:
    docker:
      - image: circleci/node:10
    working_directory: ~/workspace
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: Install dependencies from NPM
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Show prettier diff
          command: npm run prettier:show
      - run:
          name: Eslint
          command: npm run eslint
      - run:
          name: Run build
          command: npm run build

#  dev_create_docker_image:
#    docker:
#      - image: google/cloud-sdk
#    environment:
#      - GOOGLE_COMPUTE_ZONE: "europe-west1-b"
#      - GOOGLE_CLUSTER_NAME: "up-frontend"
#    steps:
#      - checkout
#      - run:
#          name: Setup Google Cloud SDK
#          command: |
#            apt-get install -qq -y gettext
#            echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
#            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
#            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
#            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
#            gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}
#      - setup_remote_docker
#      - run:
#          name: Docker build and push
#          command: |
#            docker build \
#              --build-arg GIT_COMMIT=${CIRCLE_SHA1} \
#              --build-arg BUILD_NUM=`date -u +”%Y-%m-%dT%H:%M:%SZ”` \
#              -t ${PROJECT_NAME} .
#            docker tag ${PROJECT_NAME} eu.gcr.io/${GOOGLE_PROJECT_ID}/${PROJECT_NAME}:${CIRCLE_SHA1}
#            gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://eu.gcr.io
#            docker push eu.gcr.io/${GOOGLE_PROJECT_ID}/${PROJECT_NAME}:${CIRCLE_SHA1}
#      - run:
#          name: Deploy to Kubernetes
#          command: |
#            envsubst < ${HOME}/project/k8s.yaml > ${HOME}/patched_k8s.yaml
#            kubectl apply -f ${HOME}/patched_k8s.yaml
#            kubectl rollout status deployment/nginx-8

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          context: pronovaso/up-frontend
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.+)?/
#      - dev_create_docker_image:
#          context: pronovaso/up-frontend
#          requires:
#            - build
#          filters:
#            branches:
#              only:
#                - dev